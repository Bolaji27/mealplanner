import type { Metadata } from "next";
import localFont from "next/font/local";
import {
  Hammersmith_One,
  Gravitas_One,
  Frank_Ruhl_Libre,
  Fanwood_Text,
  Inria_Serif,
  Gilda_Display,
  Courier_Prime,
  Kaisei_HarunoUmi
} from "next/font/google";
import "./globals.css";
import Navigation from "./navigation/page";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});

const courier = Courier_Prime({
  weight:"400",
  subsets:["latin"],
  variable:"--font-courier"
});

const kaisei = Kaisei_HarunoUmi({
  weight:"400",
  variable: '--font-kaisei',
  subsets: ['latin']
})


const gilda = Gilda_Display({
  weight: "400",
  subsets: ["latin"],
  variable: "--font-gilda",
});

const inria = Inria_Serif({
  weight: "300",
  variable: "--font-inria",
  subsets: ["latin"],
});

const fan = Fanwood_Text({
  weight: "400",
  variable: "--font-fan",
  style: "normal",
  subsets: ["latin"],
});

const frank = Frank_Ruhl_Libre({
  weight: "300",
  subsets: ["latin"],
  variable: "--font-frank",
});
const hammersmithOne = Hammersmith_One({
  weight: "400",
  subsets: ["latin"],
  variable: "--font-hammersmith",
});

const gravistasOne = Gravitas_One({
  weight: "400",
  style: "normal",
  subsets: ["latin"],
  variable: "--font-gravitas",
});

const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} ${hammersmithOne.variable} ${gravistasOne.variable} ${frank.variable} ${fan.variable} ${inria.variable} ${gilda.variable} ${courier.variable} ${kaisei.variable} antialiased`}
      >
        <div>
          <Navigation />
        </div>

        {children}
      </body>
    </html>
  );
}
